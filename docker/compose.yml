services:
  postgres:
    container_name: ams-postgres
    image: postgres:14.4
    ports:
      - "5432:5432"

    restart: on-failure

    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql

    networks:
      - ams_network

    expose:
      - 5432

  redis:
    container_name: ams-redis
    image: redis:7.0
    ports:
      - "6379:6379"

    restart: on-failure

    environment:
      - ALLOW_EMPTY_PASSWORD=yes

    volumes:
      - redis_data:/data

    networks:
      - ams_network


  ams-front-app:
    container_name: ams-front
    image: ams-front:latest
    environment:
      - REACT_APP_API_URL=${REACT_API_URL}
      - REACT_APP_LANG=${REACT_APP_LANG}
    ports:
      - "3000:3000"
    networks:
      - ams_network
    expose:
      - 3000


  ams-backend-app:
    container_name: ams-backend
    image: ghcr.io/hoonseung/asset-management:latest

    depends_on:
      - ams-postgres
      - ams-redis

    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}

      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}

      - CAFFEINE_MAX_SIZE=${CAFFEINE_MAX_SIZE}
      - CAFFEINE_MINUTE=${CAFFEINE_MINUTE}
      - CAFFEINE_DAY=${CAFFEINE_DAY}

      - JWT_SECRET=${JWT_SECRET}
      - JWT_ACCESS_EXPIRE=${JWT_ACCESS_EXPIRE}
      - JWT_REFRESH_EXPIRE=${JWT_REFRESH_EXPIRE}

    ports:
      - "8888:8888"
    networks:
      - ams_network
    expose:
      - 8888


volumes:
  pg_data:
  redis_data:

networks:
  default:
    name: ams_network
    driver: bridge
